package Income;
import GetDay.UptodateTime;
import List.StudentList;
import List.StudentSectionList;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.chart.BarChart;
import javafx.scene.chart.CategoryAxis;
import javafx.scene.chart.LineChart;
import javafx.scene.chart.NumberAxis;
import javafx.scene.chart.PieChart;
import javafx.scene.chart.XYChart;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.ScrollPane;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Region;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontPosture;
import javafx.scene.text.FontWeight;
import Handler.Validation;
public class DailyIncomeReport {
	private static VBox vbDailyIncomeReportForm,vbDaily;
	private static ComboBox cbMonth;
	private static ComboBox cbYear;
	private static HBox hbYearMonthContainer;
	private static Button btnSearch;
	
	public static VBox vbDailyIncomeReportForm()
	{
		vbDailyIncomeReportForm = new VBox();
		
		cbMonth = new ComboBox();
		cbMonth.getItems().addAll("January","February","March","April","May","June","July","August","September","October","November","December");
		
		GetDay.UptodateTime.getDay();
		int year = Integer.parseInt(UptodateTime.yyyy);
		for(int i = Integer.parseInt(UptodateTime.yyyy);i>=1950;i++)
		{
			cbYear.getItems().add(i);
		}
		
		btnSearch = new Button("Search");
		btnSearch.setFont(Font.font("Time New Roman",FontWeight.BOLD,FontPosture.REGULAR,15));
		btnSearch.setPrefWidth(300);
		btnSearch.setTextFill(Color.WHITE);
		btnSearch.setStyle("-fx-background-color:orange");
		
		hbYearMonthContainer = new HBox();
		hbYearMonthContainer.getChildren().addAll(cbMonth,cbYear,btnSearch);
		hbYearMonthContainer.setSpacing(20);
		
		btnSearch.setOnAction(e->{
			int noDay = Validation.GetNoOfDay(cbMonth.getSelectionModel().getSelectedIndex()+1, Integer.parseInt(cbYear.getValue().toString()));
			PieChart.Data dataIncome[] = new PieChart.Data[noDay]; 
			vbDaily.getChildren().clear();
			
			LineChart<String,Number> lineMonthly;
			XYChart.Series series,series1;
			CategoryAxis xAxis =new CategoryAxis();xAxis.setLabel("Month and Year");
			NumberAxis yAxis=new NumberAxis();  yAxis.setLabel("Income");
			
			CategoryAxis xAxis1 =new CategoryAxis();xAxis1.setLabel("Month and Year");
			NumberAxis yAxis1=new NumberAxis();  yAxis1.setLabel("Income");
			
			lineMonthly=new LineChart<String,Number>(xAxis,yAxis);
			lineMonthly.setTitle("Daily Income");
			
			final BarChart<String,Number> bc = new BarChart<String,Number>(xAxis1,yAxis1);
		
			series = new XYChart.Series();
		    series1 = new XYChart.Series();

	        series.setName("Income");   
	        lineMonthly.getData().clear();
			
	        for(int i=1;i<=noDay;i++)
			{
	        	int money = Handler.IncomeReportHandler.Date(i+"", cbMonth.getSelectionModel().getSelectedIndex()+1+"",cbYear.getValue().toString());
	        	dataIncome[i-1] = new PieChart.Data(i+"",money); 
				series.getData().add(new XYChart.Data(i+"",money));
				series1.getData().add(new XYChart.Data(i+"",money));

			}
			PieChart chart = new PieChart(FXCollections.observableArrayList(dataIncome)); 
			bc.getData().add(series);
			lineMonthly.getData().add(series1);
			bc.setTitle("Daily Income");

			chart.setTitle("Daily Income");
		        final Label caption = new Label("");
		        caption.setTextFill(Color.DARKORANGE);
		        caption.setStyle("-fx-font: 24 arial;");

		        for (final PieChart.Data data : chart.getData()) {
		            data.getNode().addEventHandler(MouseEvent.MOUSE_PRESSED,
		                    new EventHandler<MouseEvent>() {
		                        @Override public void handle(MouseEvent e) {
		                            caption.setTranslateX(e.getSceneX());
		                            caption.setTranslateY(e.getSceneY());
		                            caption.setText(String.valueOf(data.getPieValue())
		                                + "%");
		                        }
		                    });
		        }
		    HBox hbChart = new HBox();
		    hbChart.getChildren().addAll(chart,caption,bc);
		    hbChart.setSpacing(20);

			vbDaily.getChildren().addAll(lineMonthly,hbChart);	
		});
		vbDailyIncomeReportForm.getChildren().addAll(hbYearMonthContainer,vbDaily);
		return vbDailyIncomeReportForm;
	}
}
