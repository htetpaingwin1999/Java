package View;

import java.awt.Desktop;
import java.util.ArrayList;
import java.util.Date;

import Handler.ExpenseHandler;
import Handler.Validation;
import List.ExpenseCategoryLists;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;
import javafx.scene.control.ComboBox;
import javafx.scene.control.DatePicker;
import javafx.scene.control.Label;
import javafx.scene.control.RadioButton;
import javafx.scene.control.TextArea;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.FileChooser;

public class AUDExpenseView {
	private static VBox vbAddExpenseView;
	private static Label lTitle;
	private static HBox hbTitleCon;
	private static Label lSubTitle;
	private static Label lExpenseID;
	public static TextField tExpenseID;
	private static Label lExpenseIDError;
	private static VBox vbExpenseIDError;//a to a shay ma nyi lox
	private static Label lExpenseName;
	public static TextField tExpenseName;
	private static Label lExpenseNameError;
	private static VBox vbExpenseNameError;
	private static Label lexpenseCategoryName;
	private static ComboBox cbexpenseCategoryName;
	private static Label lexpenseCategoryNameError;
	private static VBox vbexpenseCategoryNameError;
	private static Label lMaxSalary;
	public static TextField tMaxSalary;
	private static Label lMaxSalaryError;
	private static VBox vbMaxSalaryError;
	private static Label lMinSalary;
	public static TextField tMinSalary;
	private static Label lMinSalaryError;
	private static VBox vbMinSalaryError;
	public static GridPane gp;
	private static Button btnSave;
	private static Button btnCancel;
	private static Button btnUpdate;
	private static Button btnDelete;
	public static HBox hbBtnCon;
	public static VBox vbAddExpenseView(int designationID,String designationName,int maxSalary,int minSalary,int departmentID,String departmentName,int adminID,int action)
	{
		MainView.lIndex.setOnMouseClicked(e->{
			MainView.vbWorkSpaceCon.getChildren().remove(MainView.vbWorkSpace);
			MainView.vbWorkSpace = ExpenseListsView.vbExpenseListsView();
			MainView.vbWorkSpaceCon.getChildren().add(MainView.vbWorkSpace);
			MainView.lIndex.setText("Staff Lists");
			MainView.lIndex.setTextFill(Color.BLACK);
			MainView.lIndex1.setText("");
		});
		
		vbAddExpenseView = new VBox();
		ArrayList<ExpenseCategoryLists> expenseLists = Handler.expenseCategoryHandler.GetAllexpenseCategory();
				
		lTitle = new Label("Add New Expense");
		lTitle.setFont(Font.font("Times New Roman",FontWeight.BOLD,20));
		
		hbTitleCon = new HBox();
		hbTitleCon.setPadding(new Insets(15,50,15,50));
		hbTitleCon.setPrefSize(1080,50);
		hbTitleCon.setStyle("-fx-background-color:white");
		hbTitleCon.getChildren().add(lTitle);
		
		btnSave = new Button("Save");
		btnSave.setTextFill(Color.WHITE);
		btnSave.setPadding(new Insets(10,10,10,10));
		btnSave.setStyle("-fx-background-color:green");
		btnSave.setPrefSize(100,30);
		btnSave.setFont(Font.font("Times New Roman", 15));

		btnCancel = new Button("Clear");
		btnCancel.setTextFill(Color.GREY);
		btnCancel.setPadding(new Insets(10,10,10,10));
		btnCancel.setStyle("-fx-background-color:#f2f2f2");
		btnCancel.setPrefSize(100,30);
		btnCancel.setFont(Font.font("Times New Roman", 15));
		
		btnUpdate = new Button("Update");
		btnUpdate.setTextFill(Color.WHITE);
		btnUpdate.setPadding(new Insets(10,10,10,10));
		btnUpdate.setStyle("-fx-background-color:blue");
		btnUpdate.setPrefSize(100,30);
		btnUpdate.setFont(Font.font("Times New Roman", 15));
		
		hbBtnCon = new HBox();
		if(action==1)
		{
			hbBtnCon.getChildren().addAll(btnSave,btnCancel);
			hbBtnCon.setSpacing(10);
		}
		if(action == 2)
		{
			hbBtnCon.getChildren().addAll(btnUpdate,btnCancel);
			hbBtnCon.setSpacing(10);
			lTitle.setText("Update Expense");
		}
		
		lExpenseID = new Label("Expense ID");
		lExpenseID.setFont(Font.font("Times New Roman",15));
		lExpenseID.setTextFill(Color.GREY);

		tExpenseID = new TextField();
		tExpenseID.setPrefWidth(470);
		tExpenseID.setEditable(false);
		
		lExpenseIDError = new Label("");
		lExpenseIDError.setTextFill(Color.WHITE);
		lExpenseIDError.setFont(Font.font("Times New Roman",15));

		vbExpenseIDError = new VBox();
		vbExpenseIDError.getChildren().addAll(tExpenseID);
		vbExpenseIDError.setSpacing(3);
		
		if(action == 1)
		{
			tExpenseID.setText(ExpenseHandler.GetNewID()+"");
		}
		else
		{
			tExpenseID.setText(designationID+"");
		}
		lExpenseName = new Label("Expense Name");
		lExpenseName.setFont(Font.font("Times New Roman", 15));
		lExpenseName.setTextFill(Color.GREY);
		
		tExpenseName = new TextField();
		tExpenseName.setPrefWidth(470);
		tExpenseName.setText(designationName);
		
		lExpenseNameError = new Label("");
		lExpenseNameError.setTextFill(Color.RED);
		lExpenseNameError.setFont(Font.font("Times New Roman",15));
		lExpenseNameError.setText("Use 'letters of the alphabet' not 'alphabets'; rather than 'characters");

		vbExpenseNameError = new VBox();
		vbExpenseNameError.getChildren().addAll(tExpenseName);
		vbExpenseNameError.setSpacing(3);
		
		tExpenseName.setOnMouseExited(e->{
			vbExpenseNameError.getChildren().remove(lExpenseNameError);
			vbExpenseIDError.getChildren().remove(lExpenseIDError);
			if(!Validation.checkName(tExpenseName.getText()))
			{
				vbExpenseNameError.getChildren().add(lExpenseNameError);
				vbExpenseIDError.getChildren().add(lExpenseIDError);
				lExpenseNameError.setText("Use 'letters of the alphabet' not 'alphabets'; rather than 'characters");
			}
		});
		
		lExpenseNameError = new Label("Eroor");
		lExpenseNameError.setTextFill(Color.RED);
		lExpenseNameError.setFont(Font.font("Times New Roman",15));

		vbExpenseNameError = new VBox();
		vbExpenseNameError.getChildren().addAll(tExpenseName);
		vbExpenseNameError.setSpacing(3);
		
		lexpenseCategoryName = new Label("Expense Name");
		lexpenseCategoryName.setFont(Font.font("Times New Roman", 15));
		lexpenseCategoryName.setTextFill(Color.GREY);
		
		cbexpenseCategoryName = new ComboBox();
		cbexpenseCategoryName.setPrefWidth(470);
		
		lexpenseCategoryNameError = new Label("No expenseCategory provided");
		lexpenseCategoryNameError.setTextFill(Color.RED);
		lexpenseCategoryNameError.setFont(Font.font("Times New Roman",15));

		vbexpenseCategoryNameError = new VBox();
		vbexpenseCategoryNameError.getChildren().addAll(cbexpenseCategoryName);
		vbexpenseCategoryNameError.setSpacing(3);
		
		if(action == 1)
		{
			if(expenseLists.size() >0)
			{
				for(ExpenseCategoryLists d:expenseLists)
				{
					cbexpenseCategoryName.getItems().add(d.getexpenseCategoryName());	
				}
				cbexpenseCategoryName.getSelectionModel().select(0);
			}
			else
			{
				vbexpenseCategoryNameError.getChildren().remove(lexpenseCategoryNameError);
				vbexpenseCategoryNameError.getChildren().add(lexpenseCategoryNameError);
			}
		}
		else
		{
			int selectIndex = 0;
			int counter = 0;
			for(ExpenseCategoryLists d:expenseLists)
			{
				cbexpenseCategoryName.getItems().add(d.());	
				if(departmentID ==d.getexpenseCategoryID())
				{
					selectIndex = counter;
				}
				counter++;
			}
			cbexpenseCategoryName.getSelectionModel().select(selectIndex);
		}
		
		lMaxSalary = new Label("Maximum Salary");
		lMaxSalary.setFont(Font.font("Times New Roman", 15));
		lMaxSalary.setTextFill(Color.GREY);
		
		tMaxSalary = new TextField();
		tMaxSalary.setPrefWidth(470);
		tMaxSalary.setText(designationName);
		
		lMaxSalaryError = new Label("");
		lMaxSalaryError.setTextFill(Color.RED);
		lMaxSalaryError.setFont(Font.font("Times New Roman",15));
		lMaxSalaryError.setText("Max Salary must be number");

		vbMaxSalaryError = new VBox();
		vbMaxSalaryError.getChildren().addAll(tMaxSalary);
		vbMaxSalaryError.setSpacing(3);
		
		lMinSalary = new Label("Minimum Salary");
		lMinSalary.setFont(Font.font("Times New Roman", 15));
		lMinSalary.setTextFill(Color.GREY);
		
		tMinSalary = new TextField();
		tMinSalary.setPrefWidth(470);
		tMinSalary.setText(designationName);
		
		lMinSalaryError = new Label("");
		lMinSalaryError.setTextFill(Color.RED);
		lMinSalaryError.setFont(Font.font("Times New Roman",15));
		lMinSalaryError.setText("Max Salary must be number");

		vbMinSalaryError = new VBox();
		vbMinSalaryError.getChildren().addAll(tMinSalary);
		vbMinSalaryError.setSpacing(3);
		
		tMaxSalary.setOnKeyReleased(e->{
			vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
			vbMinSalaryError.getChildren().remove(lMinSalaryError);
			if(!Validation.checkMoney(tMaxSalary.getText()))
			{
				vbMaxSalaryError.getChildren().add(lMaxSalaryError);
				lMaxSalaryError.setText("Type Number");
				lMinSalaryError.setText("");			}
		});
		
		tMinSalary.setOnKeyReleased(e->{
			vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
			vbMinSalaryError.getChildren().remove(lMinSalaryError);
			if(!Validation.checkMoney(tMinSalary.getText()))
			{
				
				vbMaxSalaryError.getChildren().add(lMaxSalaryError);
				vbMinSalaryError.getChildren().add(lMinSalaryError);
				lMaxSalaryError.setText("");
				lMinSalaryError.setText("Type Number");
			}
		});
		gp = new GridPane();
		gp.setStyle("-fx-background-color:white");
		gp.setPadding(new Insets(10,10,10,10));
		gp.add(lExpenseID, 0, 0);
		gp.add(lExpenseName, 1, 0);
		gp.add(vbExpenseIDError, 0, 1);
		gp.add(vbExpenseNameError, 1, 1);
		gp.add(lexpenseCategoryName, 0, 2);
		gp.add(cbexpenseCategoryName, 0, 3);
		gp.add(lMaxSalary, 0, 4);
		gp.add(lMinSalary, 1, 4);
		gp.add(vbMaxSalaryError, 0, 5);
		gp.add(vbMinSalaryError, 1, 5);
		gp.add(hbBtnCon, 0, 6);
		gp.setHgap(20);
		gp.setVgap(10);
		
		btnSave.setOnAction(e->{
			Alert al = new Alert(AlertType.INFORMATION,"Are you sure toadd",ButtonType.YES,ButtonType.NO,ButtonType.CANCEL);
			al.showAndWait();
			
			
			
			if(al.getResult() == ButtonType.YES)
			{
			
				if(!tExpenseName.getText().equals("") && expenseLists.size()!=0 && !tMaxSalary.getText().equals("") && !tMinSalary.getText().equals(""))
				{
				    if(Validation.checkName(tExpenseName.getText()) && Validation.checkMoney(tMaxSalary.getText()) && Validation.checkMoney(tMinSalary.getText()))
				    {
				    	if(Integer.parseInt(tMaxSalary.getText()) > Integer.parseInt(tMinSalary.getText()))
				    	{
				    		int did = Handler.expenseCategoryHandler.GetID(cbexpenseCategoryName.getValue().toString());
							ExpenseHandler.AddNewExpense(did+"",tExpenseName.getText(), 1, did,tMaxSalary.getText(),tMinSalary.getText());
							tExpenseID.setText(ExpenseHandler.GetNewID()+"");
							tExpenseName.setText("");
							cbexpenseCategoryName.getSelectionModel().select(0);
							tMaxSalary.setText("");
							tMinSalary.setText("");
				    	}
				    	else
				    	{
							vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
							vbMinSalaryError.getChildren().remove(lMinSalaryError);
							vbMaxSalaryError.getChildren().add(lMaxSalaryError);
							vbMinSalaryError.getChildren().add(lMinSalaryError);
							lMaxSalaryError.setText("Minimum Salary should be less than Maximum Salary");
							lMinSalaryError.setText("Minimum Salary should be less than Maximum Salary");
						}
				    }
			  }
				    
			else
			{
				if(!Validation.checkMoney(tMaxSalary.getText()))
			    {
					vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
					vbMinSalaryError.getChildren().remove(lMinSalaryError);
					vbMaxSalaryError.getChildren().add(lMaxSalaryError);
					vbMinSalaryError.getChildren().add(lMinSalaryError);
					lMaxSalaryError.setText("Salary must be number");
					lMinSalaryError.setText("");
					
			    }
				if(!Validation.checkMoney(tMinSalary.getText()))
			    {
					vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
					vbMinSalaryError.getChildren().remove(lMinSalaryError);
					vbMaxSalaryError.getChildren().add(lMaxSalaryError);
					vbMinSalaryError.getChildren().add(lMinSalaryError);
					lMaxSalaryError.setText("Salary must be number");
					lMinSalaryError.setText("");
					
			    }
				if(!Validation.checkName(tExpenseName.getText()))
			    {
					vbExpenseNameError.getChildren().remove(lExpenseNameError);
					vbExpenseIDError.getChildren().remove(lExpenseIDError);
					vbExpenseNameError.getChildren().add(lExpenseNameError);
					vbExpenseIDError.getChildren().add(lExpenseIDError);
			    }
			} 
		}	
		else
		{
			if(tExpenseName.getText().equals(""))
			{
				vbExpenseNameError.getChildren().remove(lExpenseNameError);
				vbExpenseIDError.getChildren().remove(lExpenseIDError);
				vbexpenseCategoryNameError.getChildren().remove(lexpenseCategoryNameError);
				vbExpenseNameError.getChildren().add(lExpenseNameError);
				vbExpenseIDError.getChildren().add(lExpenseIDError);
				vbexpenseCategoryNameError.getChildren().add(lexpenseCategoryNameError);
			}
			if(tMaxSalary.getText().equals(""))
			{
				vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
				vbMinSalaryError.getChildren().remove(lMinSalaryError);
				vbMaxSalaryError.getChildren().add(lMaxSalaryError);
				vbMinSalaryError.getChildren().add(lMinSalaryError);
				lMaxSalary.setText("Type Number");
				lMinSalary.setText("");
			}
			if(tMinSalary.getText().equals(""))
			{
				vbMaxSalaryError.getChildren().remove(lMaxSalaryError);
				vbMinSalaryError.getChildren().remove(lMinSalaryError);
				vbMaxSalaryError.getChildren().add(lMaxSalaryError);
				vbMinSalaryError.getChildren().add(lMinSalaryError);
				lMinSalary.setText("Typ Number");
				lMaxSalary.setText("");
			}
		}		
		});
		
		vbAddExpenseView.getChildren().addAll(hbTitleCon,gp);
		vbAddExpenseView.setStyle("-fx-background-color:#f2f2f2");
		vbAddExpenseView.setSpacing(5);
		vbAddExpenseView.setPadding(new Insets(10,0,10,0));
		return vbAddExpenseView;
		}
}

