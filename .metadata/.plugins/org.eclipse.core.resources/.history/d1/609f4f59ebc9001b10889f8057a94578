package Handler;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import List.CourseLists;
import List.StudentLists;
import List.StudentPaymentLists;


public class StudentHandler {	
	public static ArrayList<StudentLists> GetAllStudent()
	{
		ArrayList<StudentLists> studentList = new ArrayList<StudentLists>();	
		try {
			Connection con = DBConnection.openConnection();
		String q = " select st.studentID,st.studentName,st.phoneNo,st.presentAddress,s.staffID,s.staffName,st.registerDate from student as st join staff as s on st.staffID=s.staffID where st.dt=0";
		PreparedStatement ps = con.prepareStatement(q);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			StudentLists stf = new StudentLists(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getString(6),rs.getDate(7));
			studentList.add(stf);
		}
		con.close();
		} catch (SQLException e) {
		}
		return studentList;
	}
	
	public static int GetNoofStudent()
	{
		try {
			Connection con = DBConnection.openConnection();
		String q ="select count(*) from student where dt='"+0+"'";
		PreparedStatement ps = con.prepareStatement(q);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			return rs.getInt(1);
		}
		con.close();
		} catch (SQLException e) {
		}
		return 0;
	}
	public static StudentLists GetStudentData(int studentID)
	{		
		StudentLists stf = null;
		try {
			Connection con = DBConnection.openConnection();
		String q = " select st.studentID,st.studentName,st.phoneNo,st.presentAddress,s.staffID,s.staffName,st.registerDate from student as st join staff as s on st.staffID=s.staffID where st.studentID=?";
		PreparedStatement ps = con.prepareStatement(q);
		ps.setInt(1, studentID);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			 stf = new StudentLists(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getString(6),rs.getDate(7));
			return stf;
		}
		con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return stf;
	}
	public static ArrayList<StudentLists> FilterStudent(String id,String name,String phoneNo)
	{
		System.out.println("Filtering");
		ArrayList<StudentLists> studentList = new ArrayList<StudentLists>();	
		try {
			Connection con = DBConnection.openConnection();
			String q = "";
			System.out.println("ID:"+id+"Name:"+name+"PhoneNo:"+phoneNo);
			if(!id.equals(""))
			{
				q = " select st.studentID,st.studentName,st.phoneNo,st.presentAddress,s.staffID,s.staffName,st.registerDate from student as st join staff as s on st.staffID=s.staffID where st.dt='0' and st.studentID='%"+id+"%'";
			}
			if(!name.equals("")) {
				q = " select st.studentID,st.studentName,st.phoneNo,st.presentAddress,s.staffID,s.staffName,st.registerDate from student as st join staff as s on st.staffID=s.staffID where st.dt='0' and st.studentName='%"+name+"%'";
			}
			if(!phoneNo.equals(""))
			{
				q = " select st.studentID,st.studentName,st.phoneNo,st.presentAddress,s.staffID,s.staffName,st.registerDate from student as st join staff as s on st.staffID=s.staffID where st.dt='0' and st.phoneNo='%"+phoneNo+"%'";
			}
		PreparedStatement ps = con.prepareStatement(q);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			System.out.println(rs.getString(2));
			StudentLists stf = new StudentLists(rs.getInt(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getInt(5),rs.getString(6),rs.getDate(7));
			studentList.add(stf);
		}
		con.close();
		} catch (SQLException e) {
		}
		return studentList;
	}
	public static int GetNewID()
	{
		int ID = 0;
		try {
			Connection con = DBConnection.openConnection();
		String q = "select studentID from student";
		PreparedStatement ps = con.prepareStatement(q);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			ID = rs.getInt(1);
		}
		con.close();
		} catch (SQLException e) {
		}
		return ID+1;
	}
	public static int GetStudentID(String sname)
	{		
		try {
			Connection con = DBConnection.openConnection();
			String q = "select studentID from student where studentName=?";
		PreparedStatement ps = con.prepareStatement(q);
		ps.setString(1, sname);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			return rs.getInt(1);
		}
		con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return 0;
	}
	public static String GetStudentName(String id)
	{		
		try {
			Connection con = DBConnection.openConnection();
			String q = "select studentName from student where studentID=?";
		PreparedStatement ps = con.prepareStatement(q);
		ps.setString(1, id);
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {	
			return rs.getString(1);
		}
		con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return "Unknown";
	}
	public static void AddNewStudent(String name,String phoneNo,String presentAddress,int staffID)
	{
		Connection con = DBConnection.openConnection();
		String q;
        q = "insert into student(studentName,phoneNo,presentAddress,staffID) VALUES (?,?,?,?)";
    	try {
		     PreparedStatement ps =con.prepareStatement(q);
		   ps.setString(1, name);
		   ps.setString(2, phoneNo);
		   ps.setString(3, presentAddress);
		   ps.setInt(4, staffID);
           ps.executeUpdate();
		   con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public static void AddNewPayment(String id,String amount,String staffID,String cfid)
	{
		Connection con = DBConnection.openConnection();
		String q;
        q = "insert into coursestudentpayment(studentID,cfid,staffID,amount,addDate) VALUES (?,?,?,?,now())";

		try {
		     PreparedStatement ps =con.prepareStatement(q);
		   ps.setString(1, id);
		   ps.setString(2, cfid);
		   ps.setString(3, staffID);
		   ps.setString(4, amount);
           ps.executeUpdate();
		   con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	public static ArrayList<StudentPaymentLists> GetAllPayment()
	{
		ArrayList<StudentPaymentLists> studentPaymentLists = new ArrayList<StudentPaymentLists>();	
		try {
			Connection con = DBConnection.openConnection();
			String q = " select st.studentID,st.studentName,c.cname,cf.cfee,cs.discount,csp.amount,csp.cspid,stf.staffName,csp.addDate from coursestudentpayment as csp join coursestudent as cs on csp.csid=cs.csid join coursefee as cf on cs.cfid=cf.cfid join course as c on cf.cid=c.cid join staff as stf on csp.staffID=stf.staffID join student as st on cs.studentID=st.studentID";
		PreparedStatement ps = con.prepareStatement(q);
		
		ResultSet rs = ps.executeQuery();
		while (rs.next()) {
			StudentPaymentLists sp = new StudentPaymentLists(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getDate(9));
			studentPaymentLists.add(sp);
		}
		con.close();
		} catch (SQLException e) {
		}
		return studentPaymentLists;
	}
	
	public static void JoinSection(String id,String secid,String staffID)
	{
		Connection con = DBConnection.openConnection();
		String q;
        q = "insert into sectionstudent(sid,studentID,staffID,addDate) VALUES (?,?,?,now())";
    	try {
		     PreparedStatement ps =con.prepareStatement(q);
		   ps.setString(1, secid);
		   ps.setString(2, id);
		   ps.setString(3, staffID);
           ps.executeUpdate();
		   con.close();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public static boolean isJoinSection(String id,String secid)
	{
		Connection con = DBConnection.openConnection();
		String q = "select * from sectionstudent where studentID=? and sectionid=?";
		try {
		     PreparedStatement ps =con.prepareStatement(q);
		   ps.setString(1, id);
		   ps.setString(2, secid);
		   ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				return true;
			}
			con.close();
			} catch (SQLException e) {
			}
		return false;
	}
	
	public static boolean isExistedStudentToThisCourse(String id,String cid)
	{
		Connection con = DBConnection.openConnection();
		System.out.println("Student ID"+id+":Course Id"+cid+"Section ID:");
		String q = "select st.studentName,c.cname from sectionstudent as ss join section as s on ss.sectionid=s.sectionid join student as st on ss.studentID=st.studentID join coursefee as cf on s.cfid=cf.cfid join course as c on cf.cid=c.cid where st.studentID='"+id+"' and c.cid='"+cid+"' limit 1";
		try {
		     PreparedStatement ps =con.prepareStatement(q);
		   ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				return true;
			}
			con.close();
			} catch (SQLException e) {
			}
		return false;
	}
	
	public static int currentMonthIncome()
	{
		Connection con = DBConnection.openConnection();
		System.out.println("Hi CurrentMonth Generating");
		String q = "select sum(amount) from feepayment where year(addDate)=year(now()) and month(addDate)=month(now())";
		try {
		     PreparedStatement ps =con.prepareStatement(q);
		   ResultSet rs = ps.executeQuery();
			while (rs.next()) {
				return rs.getInt(1);
			}
			con.close();
			} catch (SQLException e) {
			}
		return 0;
	}
	
}
